<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on infosec blog</title>
    <link>https://evillogic.github.io/posts/</link>
    <description>Recent content in Posts on infosec blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2022 Kaz Bishop</copyright>
    <lastBuildDate>Sun, 04 Sep 2022 16:18:56 -0700</lastBuildDate><atom:link href="https://evillogic.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Edit the Blog</title>
      <link>https://evillogic.github.io/posts/edit-the-blog/</link>
      <pubDate>Sun, 04 Sep 2022 16:18:56 -0700</pubDate>
      
      <guid>https://evillogic.github.io/posts/edit-the-blog/</guid>
      <description>clone the blog with
git clone --recurse-submodules git@github.com:evillogic/infosec-blog.git create a new page with
hugo new &amp;lt;page-name&amp;gt;.md Building the pages is simply hugo. You can then simply navigate to the public directory and push the change.
pushd public git add . git commit -m &amp;#34;added some content&amp;#34; git push popd Or here is a handy alias
alias update-blog=&amp;#39;f(){ pushd public; git add .; git commit -m &amp;#34;$@&amp;#34;; git push; popd; unset -f f; }; f&amp;#39; </description>
    </item>
    
    <item>
      <title>post1</title>
      <link>https://evillogic.github.io/posts/post1/</link>
      <pubDate>Sat, 03 Sep 2022 16:59:40 -0700</pubDate>
      
      <guid>https://evillogic.github.io/posts/post1/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
