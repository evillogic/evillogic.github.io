<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>index on infosec blog</title><link>https://blog.kazam.io/</link><description>Recent content in index on infosec blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© 2022 Kaz Bishop</copyright><lastBuildDate>Sat, 03 Sep 2022 17:44:06 -0700</lastBuildDate><atom:link href="https://blog.kazam.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Cheatsheet</title><link>https://blog.kazam.io/notes/cheatsheet/</link><pubDate>Sat, 30 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.kazam.io/notes/cheatsheet/</guid><description>I think most people hate writing bash scripts. Bash took the concept of syntactic sugar and thought, &amp;ldquo;what if syntactic pain&amp;rdquo;?
So anyways, this is a collection of tricks for making sure your thing stays running in a non-forkbomb sort of way.
Persistence/application check
if ! pgrep -f &amp;#34;myth.py&amp;#34; &amp;gt;/dev/null; then setsid --fork python3 /var/atlassian/application-data/bitbucket/bin/myth.py &amp;lt;/dev/null &amp;amp;&amp;gt;/dev/null &amp;amp; fi Restart autossh if one or both connections are down
#!/bin/bash autossh_processes=$(pgrep -f autossh) process_count=$(echo &amp;#34;$autossh_processes&amp;#34; | wc -w) if [ &amp;#34;$process_count&amp;#34; -ne 2 ]; then killall autossh /home/kali/start_autossh.</description></item><item><title>Edit the Blog with Obsidian</title><link>https://blog.kazam.io/notes/edit-with-obsidian/</link><pubDate>Sat, 30 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.kazam.io/notes/edit-with-obsidian/</guid><description>Maybe I will use this more if I can edit it with Obsidian. Let&amp;rsquo;s see!
In order to edit with Obsidian, I took some inspiration from this:
https://github.com/vinibaggio/obsblog-template
Where the basic idea is just to use Obsidian Git to push changes to the repository. No idea how well this works on mobile, and it seems to have the drawback that Obsidian still can&amp;rsquo;t edit .md files by default.
Obsidian Git&amp;rsquo;s documentation is useless.</description></item><item><title>Kubernetes Debugging</title><link>https://blog.kazam.io/notes/k8s-debugging/</link><pubDate>Sat, 30 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.kazam.io/notes/k8s-debugging/</guid><description>Print kubectl logs from deployment or scaled-job kubectl logs -l scaledjob.keda.sh/name=httpx-scaledjob --follow --max-log-requests 500 Creating an Ubuntu Pod cat &amp;lt;&amp;lt;EOF | kubectl apply -f - apiVersion: v1 kind: Pod metadata: name: ubuntu labels: app: ubuntu spec: containers: - image: ubuntu command: - &amp;#34;sleep&amp;#34; - &amp;#34;604800&amp;#34; imagePullPolicy: IfNotPresent name: ubuntu restartPolicy: Always EOF kubectl exec -it ubuntu -- /bin/bash
Privileged with service account and host networking cat &amp;lt;&amp;lt;EOF | kubectl apply -f - apiVersion: v1 kind: Pod metadata: name: ubuntu labels: app: ubuntu spec: hostNetwork: true serviceAccountName: httpx-service-account containers: - image: ubuntu command: - &amp;#34;sleep&amp;#34; - &amp;#34;604800&amp;#34; imagePullPolicy: IfNotPresent name: ubuntu securityContext: privileged: true restartPolicy: Always EOF maybe only try this at home kids</description></item><item><title>Obsidian Livesync Setup (WIP)</title><link>https://blog.kazam.io/notes/livesync-setup/</link><pubDate>Sat, 30 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.kazam.io/notes/livesync-setup/</guid><description>install docker compose
sudo curl -L &amp;#34;https://github.com/docker/compose/releases/download/v2.20.1/docker-compose-linux-x86_64&amp;#34; -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose https://github.com/vrtmrz/self-hosted-livesync-server</description></item><item><title>Selenium Grid RCE - Chrome on Linux</title><link>https://blog.kazam.io/posts/selenium-grid-rce/</link><pubDate>Mon, 12 Sep 2022 13:41:09 -0700</pubDate><guid>https://blog.kazam.io/posts/selenium-grid-rce/</guid><description>Selenium is an awesome tool that you can use to completely drive a web browser through a nice and simple python interface. There&amp;rsquo;s lots of cool possibilities to use this for red teaming, however the simplest is that it can provide a trivial vector for RCE when unauthenticated.
There are several publicly available exploits for Selenium Grid, however during testing I found that most of them were either low quality or do not work on unix environments due to the executable filesystem permission.</description></item><item><title>Install Docker On Ubuntu or Pop</title><link>https://blog.kazam.io/notes/docker/</link><pubDate>Mon, 12 Sep 2022 13:05:07 -0700</pubDate><guid>https://blog.kazam.io/notes/docker/</guid><description>Simple copy and paste to install docker on Ubuntu as of 9/12/22
sudo apt-get update sudo apt-get install \ ca-certificates \ curl \ gnupg \ lsb-release sudo mkdir -p /etc/apt/keyrings curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg echo \ &amp;#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \ $(lsb_release -cs) stable&amp;#34; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin https://docs.docker.com/engine/install/ubuntu/</description></item><item><title>Executing Code on Python Package Installs - Malicious Pypi</title><link>https://blog.kazam.io/posts/malicious-pypi/</link><pubDate>Thu, 08 Sep 2022 08:39:26 -0700</pubDate><guid>https://blog.kazam.io/posts/malicious-pypi/</guid><description>Foreword Multiple researchers in the community have given dependency confusion and other supply chain attacks a bad name recently. While there are very valid reasons to perform this attack, please do not pollute pypi or any other package manager with typosquatting, stolen code, or other non-targetted attacks in the name of security research. It&amp;rsquo;s no different than spreading malware. The point has been made. Please be responsible.
Executing code on package install While most python packages are distributed as wheels, the &amp;ldquo;binary&amp;rdquo; distribution format, Pypi also enables developers to distribute their package as source distributions (or sdist).</description></item><item><title>Edit the Blog</title><link>https://blog.kazam.io/notes/edit-the-blog/</link><pubDate>Sun, 04 Sep 2022 16:18:56 -0700</pubDate><guid>https://blog.kazam.io/notes/edit-the-blog/</guid><description>clone the blog with
git clone --recurse-submodules git@github.com:evillogic/infosec-blog.git create a new page with
hugo new &amp;lt;page-name&amp;gt;.md Building the pages is simply hugo, however due to submodule behavior we need to first checkout the master submodule branch. You can then simply navigate to the public directory and push the change.
The workflow looks something like this:
build the new content the new content is written to the public folder, a submodule pointing to evillogic/evillogic.</description></item><item><title>About</title><link>https://blog.kazam.io/about/</link><pubDate>Sat, 03 Sep 2022 16:59:40 -0700</pubDate><guid>https://blog.kazam.io/about/</guid><description>hi there</description></item></channel></rss>