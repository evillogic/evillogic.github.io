<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on infosec blog</title><link>https://blog.kazam.io/notes/</link><description>Recent content in Notes on infosec blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© 2022 Kaz Bishop</copyright><lastBuildDate>Sat, 30 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.kazam.io/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>Cheatsheet</title><link>https://blog.kazam.io/notes/cheatsheet/</link><pubDate>Sat, 30 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.kazam.io/notes/cheatsheet/</guid><description>I think most people hate writing bash scripts. Bash took the concept of syntactic sugar and thought, &amp;ldquo;what if syntactic pain&amp;rdquo;?
So anyways, this is a collection of tricks for making sure your thing stays running in a non-forkbomb sort of way.
Persistence/application check
if ! pgrep -f &amp;#34;myth.py&amp;#34; &amp;gt;/dev/null; then setsid --fork python3 /var/atlassian/application-data/bitbucket/bin/myth.py &amp;lt;/dev/null &amp;amp;&amp;gt;/dev/null &amp;amp; fi Restart autossh if one or both connections are down
#!/bin/bash autossh_processes=$(pgrep -f autossh) process_count=$(echo &amp;#34;$autossh_processes&amp;#34; | wc -w) if [ &amp;#34;$process_count&amp;#34; -ne 2 ]; then killall autossh /home/kali/start_autossh.</description></item><item><title>Edit the Blog with Obsidian</title><link>https://blog.kazam.io/notes/edit-with-obsidian/</link><pubDate>Sat, 30 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.kazam.io/notes/edit-with-obsidian/</guid><description>Maybe I will use this more if I can edit it with Obsidian. Let&amp;rsquo;s see!
In order to edit with Obsidian, I took some inspiration from this:
https://github.com/vinibaggio/obsblog-template
Where the basic idea is just to use Obsidian Git to push changes to the repository. No idea how well this works on mobile, and it seems to have the drawback that Obsidian still can&amp;rsquo;t edit .md files by default.
Obsidian Git&amp;rsquo;s documentation is useless.</description></item><item><title>Install Docker On Ubuntu or Pop</title><link>https://blog.kazam.io/notes/docker/</link><pubDate>Mon, 12 Sep 2022 13:05:07 -0700</pubDate><guid>https://blog.kazam.io/notes/docker/</guid><description>Simple copy and paste to install docker on Ubuntu as of 9/12/22
sudo apt-get update sudo apt-get install \ ca-certificates \ curl \ gnupg \ lsb-release sudo mkdir -p /etc/apt/keyrings curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg echo \ &amp;#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \ $(lsb_release -cs) stable&amp;#34; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin https://docs.docker.com/engine/install/ubuntu/</description></item><item><title>Edit the Blog</title><link>https://blog.kazam.io/notes/edit-the-blog/</link><pubDate>Sun, 04 Sep 2022 16:18:56 -0700</pubDate><guid>https://blog.kazam.io/notes/edit-the-blog/</guid><description>clone the blog with
git clone --recurse-submodules git@github.com:evillogic/infosec-blog.git create a new page with
hugo new &amp;lt;page-name&amp;gt;.md Building the pages is simply hugo, however due to submodule behavior we need to first checkout the master submodule branch. You can then simply navigate to the public directory and push the change.
The workflow looks something like this:
build the new content the new content is written to the public folder, a submodule pointing to evillogic/evillogic.</description></item></channel></rss>